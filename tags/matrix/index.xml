<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matrix on Ting-Hsuan Lin</title>
    <link>https://vivian6f2.github.io/tags/matrix/</link>
    <description>Recent content in Matrix on Ting-Hsuan Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vivian6f2.github.io/tags/matrix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spiral Matrix</title>
      <link>https://vivian6f2.github.io/blog/spiral-matrix/</link>
      <pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/spiral-matrix/</guid>
      <description>Spiral Matrix LeetCode #54 
Description Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
For example,
Given the following matrix:
[ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ]  You should return [1,2,3,6,9,8,7,4,5].

My Thoughts At first, I think about using a pointer to do that. So at first it goes right and until the next point does not exist, it changes its direction.</description>
    </item>
    
    <item>
      <title>Spiral Matrix II</title>
      <link>https://vivian6f2.github.io/blog/spiral-matrix-ii/</link>
      <pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/spiral-matrix-ii/</guid>
      <description>Spiral Matrix II LeetCode #59 
Description Given an integer n, generate a square matrix filled with elements from 1 to n^2 in spiral order.
For example,
Given n = 3,
You should return the following matrix:
[ [ 1, 2, 3 ], [ 8, 9, 4 ], [ 7, 6, 5 ] ]  
My Thoughts This is similar to Spiral Matrix. So I would like to solve this problem recursively too.</description>
    </item>
    
  </channel>
</rss>
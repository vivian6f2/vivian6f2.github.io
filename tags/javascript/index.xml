<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Ting-Hsuan Lin</title>
    <link>https://vivian6f2.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on Ting-Hsuan Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vivian6f2.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2D Web Side-Scrolling Racing Game</title>
      <link>https://vivian6f2.github.io/project/side-scrolling-racing-game/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/side-scrolling-racing-game/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Collaborative Online Judge System</title>
      <link>https://vivian6f2.github.io/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>Face Recognition Roll Call System</title>
      <link>https://vivian6f2.github.io/project/face-recognition-roll-call-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/face-recognition-roll-call-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Online Learning System</title>
      <link>https://vivian6f2.github.io/project/online-learning-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/online-learning-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tap News</title>
      <link>https://vivian6f2.github.io/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>AngularJS Note - Unsafe Value</title>
      <link>https://vivian6f2.github.io/blog/angularjs-note-unsafe-value/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/angularjs-note-unsafe-value/</guid>
      <description>Notes for AngularJS Error: unsafe value used in a resource URL context I met this error when I tried to set iframe src attribute. And after searching this error message, I got this answer.
So let me just simplify this answer into my own word. In the component that I want to set the url for iframe src:
 Import SafeResourceUrl and DomSanitizer
import { SafeResourceUrl, DomSanitizer } from &#39;@angular/platform-browser&#39;;  Add DomSanitizer into contructor</description>
    </item>
    
    <item>
      <title>Top K Frequent Elements</title>
      <link>https://vivian6f2.github.io/blog/top-k-frequent-elements/</link>
      <pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/top-k-frequent-elements/</guid>
      <description>Top K Frequent Elements LeetCode #347 
Description Given a non-empty array of integers, return the k most frequent elements.
For example,
Given [1,1,1,2,2,3] and k = 2, return [1,2].
Note:
 You may assume k is always valid, 1 ? k ? number of unique elements. Your algorithm&amp;rsquo;s time complexity must be better than O(n log n), where n is the array&amp;rsquo;s size.  
My Thoughts I can divide this question into two parts:</description>
    </item>
    
    <item>
      <title>3 Sum</title>
      <link>https://vivian6f2.github.io/blog/3-sum/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/3-sum/</guid>
      <description>3 Sum LeetCode #15 
Description Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

My Thoughts Create a helper function twoSum(nums, target), to find if there are any two elements A and B in nums, A + B = target.</description>
    </item>
    
    <item>
      <title>Longest Substring Without Repeating Characters</title>
      <link>https://vivian6f2.github.io/blog/longest-substring-without-repeating-characters/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/longest-substring-without-repeating-characters/</guid>
      <description>Longest Substring Without Repeating Characters LeetCode #3 
Description Given a string, find the length of the longest substring without repeating characters.
Examples:
Given &amp;ldquo;abcabcbb&amp;rdquo;, the answer is &amp;ldquo;abc&amp;rdquo;, which the length is 3.
Given &amp;ldquo;bbbbb&amp;rdquo;, the answer is &amp;ldquo;b&amp;rdquo;, with the length of 1.
Given &amp;ldquo;pwwkew&amp;rdquo;, the answer is &amp;ldquo;wke&amp;rdquo;, with the length of 3. Note that the answer must be a substring, &amp;ldquo;pwke&amp;rdquo; is a subsequence and not a substring.</description>
    </item>
    
    <item>
      <title>Reorder List</title>
      <link>https://vivian6f2.github.io/blog/reorder-list/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/reorder-list/</guid>
      <description>Reorder List LeetCode #143 
Description Given a singly linked list L: L0?L1?…?Ln-1?Ln, reorder it to: L0?Ln?L1?Ln-1?L2?Ln-2?…
You must do this in-place without altering the nodes&amp;rsquo; values.
For example, Given {1,2,3,4}, reorder it to {1,4,2,3}. 
My Thoughts I will divide this question into some smaller questions:
 Find the middle of the linked list. Just use two pointers, slow and fast. Slow pointer takes one step everytime while fast pointer takes two step.</description>
    </item>
    
  </channel>
</rss>
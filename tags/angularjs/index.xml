<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on Ting-Hsuan Lin</title>
    <link>https://vivian6f2.github.io/tags/angularjs/</link>
    <description>Recent content in Angularjs on Ting-Hsuan Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vivian6f2.github.io/tags/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Facebook Search Tool</title>
      <link>https://vivian6f2.github.io/project/facebook-search-tool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/facebook-search-tool/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AngularJS Note - File Saver</title>
      <link>https://vivian6f2.github.io/blog/angularjs-note-file-saver/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/angularjs-note-file-saver/</guid>
      <description>Notes for AngularJS How to let user save file I&amp;rsquo;m trying to let user export custom settings into a text file. So I found this solution which use file-saver package.
And it worked for me with the following steps:
 Install file-saver and its type.
npm install file-saver --save npm install @types/file-saver --save  Import file-saver in the component.
import * as FileSaver from &#39;file-saver&#39;;  Then I can easily save file with the following code which will save a file named export.</description>
    </item>
    
    <item>
      <title>AngularJS Note - Subscribe</title>
      <link>https://vivian6f2.github.io/blog/angularjs-note-subscribe/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/angularjs-note-subscribe/</guid>
      <description>Notes for AngularJS How to update component when service data changed I have a service called data in my project, and I want to update one component when some data changed in service. However, the only way to get data in service is to get it inside constructor.
constructor(@Inject(&#39;data&#39;) private data) { this.showVideo = this.data.showVideo; this.videoId = this.data.videoId; }  So I need to use subscribe(()=&amp;gt;{}) to notice my component that the data is updated.</description>
    </item>
    
    <item>
      <title>AngularJS Note - Unsafe Value</title>
      <link>https://vivian6f2.github.io/blog/angularjs-note-unsafe-value/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/angularjs-note-unsafe-value/</guid>
      <description>Notes for AngularJS Error: unsafe value used in a resource URL context I met this error when I tried to set iframe src attribute. And after searching this error message, I got this answer.
So let me just simplify this answer into my own word. In the component that I want to set the url for iframe src:
 Import SafeResourceUrl and DomSanitizer
import { SafeResourceUrl, DomSanitizer } from &#39;@angular/platform-browser&#39;;  Add DomSanitizer into contructor</description>
    </item>
    
  </channel>
</rss>
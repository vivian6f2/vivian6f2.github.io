<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ting-Hsuan Lin</title>
    <link>https://vivian6f2.github.io/</link>
    <description>Recent content on Ting-Hsuan Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vivian6f2.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tap News</title>
      <link>https://vivian6f2.github.io/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>Collaborative Online Judge System</title>
      <link>https://vivian6f2.github.io/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>Facebook Search Tool</title>
      <link>https://vivian6f2.github.io/project/facebook-search-tool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/facebook-search-tool/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Avalon Board Game</title>
      <link>https://vivian6f2.github.io/project/avalon-boardgame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/avalon-boardgame/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2D Web Side-Scrolling Racing Game</title>
      <link>https://vivian6f2.github.io/project/side-scrolling-racing-game/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/side-scrolling-racing-game/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Online Learning System</title>
      <link>https://vivian6f2.github.io/project/online-learning-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/online-learning-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Face Recognition Roll Call System</title>
      <link>https://vivian6f2.github.io/project/face-recognition-roll-call-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/project/face-recognition-roll-call-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://vivian6f2.github.io/resume/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/resume/</guid>
      <description>TING-HSUAN (VIVIAN) LIN Los Angeles, CA 90007 | 714-332-7325 | tinghsul@usc.edu | https://www.linkedin.com/in/ting-hsuan-lin-829138133
Download PDF
EDUCATION University of Southern California, Los Angeles, CA 2016-2018 Master of Science, Computer Science (GPA:3.75&amp;frasl;4.0)
Course Highlights: 3-D Graphics and Rendering, Web Technologies, Database Systems
National Chiao Tung University, Hsinchu, Taiwan 2012-2016 Bachelor of Science, Computer Science (GPA:3.95&amp;frasl;4.0)
Course Highlights: Human-Computer Interaction, Internet of Things, Microprocessor System, Computer Graphics, Hardware-Software Co-design
TECHNICAL SKILLS Programming Languages (order by familiarity): C++, Java, Python, C, JavaScript, PHP, MySQL, HTML, Matlab, CSS, Swift, Assembly, Verilog</description>
    </item>
    
    <item>
      <title>About This Website</title>
      <link>https://vivian6f2.github.io/blog/about-this-website/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/about-this-website/</guid>
      <description>About This Website 
This website is built based on hugo with theme minimal.
I built this website for displaying my projects and resume, and also for updating blog in a flexible, easy-to-use static site.
If you are interested, feel free to take a look at github.</description>
    </item>
    
    <item>
      <title>What Happens When Typing URL Into The Browser</title>
      <link>https://vivian6f2.github.io/blog/what-happens-when-typing-url-into-the-browser/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/what-happens-when-typing-url-into-the-browser/</guid>
      <description>What Happens When Typing URL Into The Browser 
Description What happens when you type www.google.com into the browser? Outline the &amp;ldquo;life of a request&amp;rdquo; from beginning to end.

My Answer High-level outline  Browser check it&amp;rsquo;s cache to see if it has been to that domain name before.
After user typed www.google.com in browser&amp;rsquo;s url bar and clicked enter, browser will check the input with the domain IP pair in it&amp;rsquo;s cache.</description>
    </item>
    
    <item>
      <title>How Many Combination Results</title>
      <link>https://vivian6f2.github.io/blog/how-many-combination-results/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/how-many-combination-results/</guid>
      <description>How Many Combination Results 
Description Given an array of numbers, put [+, -, *, /] randomly between every two numbers. Compute and list all possible results.

My Thoughts I think I can do it both iteratively and recursively. If I want to do it iteratively, then I need a stack or a queue. While I do it recursively, then I just have to push result into array when I finish computing last number.</description>
    </item>
    
    <item>
      <title>Trapping Rain Water</title>
      <link>https://vivian6f2.github.io/blog/trapping-rain-water/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://vivian6f2.github.io/blog/trapping-rain-water/</guid>
      <description>Trapping Rain Water LeetCode #42 
Description Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
For example,  Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.
My Thoughts I would like to do this problem with two pointers, one points to left wall and another to right wall. If I can find out left and right wall for every part that can trap water, then I can easily compute total water I can get.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ting-Hsuan Lin</title>
    <link>http://example.com/</link>
    <description>Recent content on Ting-Hsuan Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>first blog post</title>
      <link>http://example.com/blog/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/blog/project1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tap News</title>
      <link>http://example.com/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/ec2-34-223-214-115.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>Collaborative Online Judge System</title>
      <link>http://example.com/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/ec2-54-71-209-134.us-west-2.compute.amazonaws.com3000</guid>
      <description></description>
    </item>
    
    <item>
      <title>Facebook Search Tool</title>
      <link>http://example.com/project/facebook-search-tool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/project/facebook-search-tool/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Avalon Board Game</title>
      <link>http://example.com/project/avalon-boardgame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/project/avalon-boardgame/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2D Web Side-Scrolling Racing Game</title>
      <link>http://example.com/project/side-scrolling-racing-game/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/project/side-scrolling-racing-game/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Online Learning System</title>
      <link>http://example.com/project/online-learning-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/project/online-learning-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Face Recognition Roll Call System</title>
      <link>http://example.com/project/face-recognition-roll-call-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/project/face-recognition-roll-call-system/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.com/resume/</link>
      <pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/resume/</guid>
      <description>TING-HSUAN (VIVIAN) LIN Los Angeles, CA 90007 | 714-332-7325 | tinghsul@usc.edu | https://www.linkedin.com/in/ting-hsuan-lin-829138133
Download PDF
EDUCATION University of Southern California, Los Angeles, CA 2016-2018 Master of Science, Computer Science (GPA:3.75&amp;frasl;4.0)
Course Highlights: 3-D Graphics and Rendering, Web Technologies, Database Systems
National Chiao Tung University, Hsinchu, Taiwan 2012-2016 Bachelor of Science, Computer Science (GPA:3.95&amp;frasl;4.0)
Course Highlights: Human-Computer Interaction, Internet of Things, Microprocessor System, Computer Graphics, Hardware-Software Co-design
TECHNICAL SKILLS Programming Languages (order by familiarity): C++, Java, Python, C, JavaScript, PHP, MySQL, HTML, Matlab, CSS, Swift, Assembly, Verilog</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>http://example.com/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>http://example.com/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>http://example.com/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>http://example.com/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.com/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>